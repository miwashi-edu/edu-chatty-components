import{j as o}from"./jsx-runtime-CkxqCPlQ.js";import{r as t}from"./index-DJO9vBfz.js";import{s as u}from"./Login.module-BwYt-FcZ.js";import{U as y}from"./UserAtom-BjTYjDxP.js";import{P as k}from"./PasswordAtom-DW8fOL6M.js";const N=t.createContext(),P=({children:e})=>{const[r,i]=t.useState(null),n=(c,a)=>{if(c==="testuser"&&a==="testpassword"){const s="mock-uuid-12345";i(s),console.log("Mock login successful, User ID:",s)}else console.error("Mock login failed: Invalid username or password")};return o.jsx(N.Provider,{value:{userId:r,loginFunction:n},children:e})};P.__docgenInfo={description:"",methods:[],displayName:"MockLoginProvider"};const C=t.createContext(),j=({children:e})=>{const[r,i]=t.useState(null),n=async(c,a)=>{try{const s=await fetch("https://your-api.com/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:c,password:a})}),m=await s.json();s.ok?(i(m.userId),console.log("Login successful, User ID:",m.userId)):console.error("Login failed:",m.message)}catch(s){console.error("An error occurred during login:",s)}};return o.jsx(C.Provider,{value:{userId:r,loginFunction:n},children:e})};j.__docgenInfo={description:"",methods:[],displayName:"LoginProvider"};const I=({onClick:e})=>o.jsx("button",{className:u.submitButton,onClick:e,children:"Login"});I.__docgenInfo={description:"",methods:[],displayName:"LoginButtonAtom"};const _=({loginFunction:e})=>{const[r,i]=t.useState(""),[n,c]=t.useState(""),a=()=>{e?e(r,n):(console.error("No login function provided!"),console.error("User:",r),console.error("Password:",n))};return o.jsx("div",{className:u.container,children:o.jsxs("div",{className:u.login,children:[o.jsx(y,{onUserChange:i}),o.jsx(k,{onPasswordChange:c}),o.jsx(I,{onClick:a})]})})},g=_;_.__docgenInfo={description:"",methods:[],displayName:"Login"};const D={title:"Chatty/Login",component:g},d=()=>o.jsx(P,{children:o.jsx(g,{})}),l=()=>o.jsx(j,{children:o.jsx(g,{})});d.__docgenInfo={description:"",methods:[],displayName:"Default"};l.__docgenInfo={description:"",methods:[],displayName:"WithRealProvider"};var p,f,L;d.parameters={...d.parameters,docs:{...(p=d.parameters)==null?void 0:p.docs,source:{originalSource:`() => <MockLoginProvider>
        <Login />
    </MockLoginProvider>`,...(L=(f=d.parameters)==null?void 0:f.docs)==null?void 0:L.source}}};var h,x,v;l.parameters={...l.parameters,docs:{...(h=l.parameters)==null?void 0:h.docs,source:{originalSource:`() => <LoginProvider>
        <Login />
    </LoginProvider>`,...(v=(x=l.parameters)==null?void 0:x.docs)==null?void 0:v.source}}};const R=["Default","WithRealProvider"];export{d as Default,l as WithRealProvider,R as __namedExportsOrder,D as default};
